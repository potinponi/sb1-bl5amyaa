rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isTrialActive() {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid));
      let trialEnd = user.data.trial_end;
      return trialEnd > request.time;
    }

    function trialEndDate() {
      return request.time + duration.value(14, "d");
    }

    // Users collection
    match /users/{userId} {
      allow read: if true;
      allow create: if true;
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
      allow update: if request.auth == null || !isOwner(userId) ;
      allow delete: if request.auth == null || !isOwner(userId) ;
      allow create: if request.resource.data.trial_end == trialEndDate();
    }
    
    // Chatbots collection
    match /chatbots/{chatbotId} {
      allow read: if true; // Public read for widget access
      allow write: if isAuthenticated() && isOwner(resource.data.user_id) && (isTrialActive() || resource.data.subscription_status == 'pro');
    }
    
    // Flows collection
    match /flows/{flowId} {
      allow read: if true; // Public read for widget access
      allow write: if isAuthenticated() && isOwner(resource.data.user_id) && (isTrialActive() || resource.data.subscription_status == 'pro');
    }
    
    // Leads collection
    match /leads/{leadId} {
      allow read: if isAuthenticated() && isOwner(resource.data.chatbot_id);
      allow create: if true; // Allow public creation for widget
      allow delete: if isAuthenticated() && isOwner(resource.data.chatbot_id);
    }
    
    // Chat interactions collection
    match /chat_interactions/{interactionId} {
      allow read: if isAuthenticated() && isOwner(resource.data.chatbot_id);
      allow create: if true; // Allow public creation for widget
    }
    
    // Feedback collection
    match /feedback/{feedbackId} {
      allow read: if isAuthenticated() && isOwner(resource.data.chatbot_id);
      allow create: if true; // Allow public creation for widget
    }
  }
}